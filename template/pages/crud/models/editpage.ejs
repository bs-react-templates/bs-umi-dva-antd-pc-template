<% for(var key in module){%>
import modelExtend from 'dva-model-extend';
import {edit} from 'baseModel'
import {queryPage,insert,queryOne ,update} from '../service'

const namespace= '<%=module[key]['namespace'] %>.editpage'
const appModel = modelExtend(edit,{
    namespace,
    state: {

    },
    effects: {
        * initPage({payload},{call,put,select}) {
            const {action,queryParams}=payload;
            let editData={};
            switch (action){
                case 'add':
                    editData={};
                    break;
                case 'edit':
                    let {data} = yield call(queryOne,queryParams);
                case 'view':
                    editData={...data};
                    break;
                default:
                    break;
            }
            yield put({
            type: 'syncState',
            payload: {editData},
            })
        },
        * insertData({payload},{call,put,select}) {
            yield put({
                type: 'syncState',
                payload: {editData:{...payload}},
            })
            const {data} = yield call(insert, payload);
            yield put({
                type: 'syncState',
                payload: {saveState:'success'},
            })
        },
        * editData({payload},{call,put,select}) {
            yield put({
                type: 'syncState',
                payload: {editData:{...payload}},
            })
            const {data} = yield call(update, payload);
            yield put({
                type: 'syncState',
                payload: {saveState:'success'},
            })
        },
    },
    reducers: {

    },
})
export default appModel;
<% }%>