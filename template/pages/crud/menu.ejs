import { isUrl } from 'utils/utils';

const menuData = [<% menu.forEach(function(item,key){%>
    {
        name: '<%=item['name'] %>',
        path: '<%=item['name'] %>',
        icon: 'form',
        children: [<% if(item['children']) {%><% item['children'].forEach(function(val,index){%>
            {
                name: '<%=val['name'] %>',
                path: '<%=val['name'] %>',
                icon: 'form',
            },<% }) %><% }%>
        ],
    },<% }) %>
]


function formatter(data, parentPath = '/', parentAuthority) {
    return data.map(item => {
        let { path,isMenu } = item;
        if (!isUrl(path)) {
            path = parentPath + item.path;
        }
        const result = {
            ...item,
            path,
            authority: item.authority || parentAuthority,
        };
        if (item.children) {
            result.children = formatter(
                item.children,
                `${parentPath}${item.path}/`,
                item.authority
            );
        }

        return result;
    });
}

export const getMenuData = () => formatter(menuData);

function formatterBreadcrumb(data) {
return data.reduce((result, current) => {
    let childrenResult = {};
    if (current.children) {
        childrenResult = formatterBreadcrumb(current.children);
    }
    return {
        ...result,
        [current.path]: {
        name: current.name,
        },
        ...childrenResult,
        };
    }, {});
}

export const getBreadcrumbNameMap = () => formatterBreadcrumb(getMenuData(menuData));
